name: Fly Deploy Checker
on:
  push:
    branches:
      - main
    paths:
      - "apps/checker/**"

env:
  APP_NAME: zk-openstatus-checker

jobs:
  deploy-checker:
    name: Deploy Checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Verificar e Criar Máquina (se necessário)
        run: |
          if ! flyctl machines list -a ${{ env.APP_NAME }} | grep -q 'RUNNING\|STOPPED'; then
            echo "Nenhuma máquina encontrada, criando uma nova..."
            flyctl machine run docker.io/library/nginx -a ${{ env.APP_NAME }} --region ams
          else
            echo "Máquina já existente, continuando com o deploy..."
          fi
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Set Fly.io Secrets
        run: |
          flyctl secrets set -a ${{ env.APP_NAME }} \
          FLY_REGION=${{ secrets.FLY_REGION }} \
          REGION=${{ secrets.REGION }} \
          CRON_SECRET=${{ secrets.CRON_SECRET }} \
          TINYBIRD_TOKEN=${{ secrets.TINYBIRD_TOKEN }} \
          LOG_LEVEL=${{ secrets.LOG_LEVEL }} \
          CLOUD_PROVIDER=${{ secrets.CLOUD_PROVIDER }} \
          PORT=${{ secrets.PORT }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - working-directory: apps/checker
        name: Deploy Checker
        run: |
          flyctl deploy --config apps/checker/fly.toml -a ${{ env.APP_NAME }} \
          --dockerfile apps/checker/Dockerfile --remote-only --wait-timeout=500
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
